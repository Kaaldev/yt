{"version":3,"sources":["api/api.ts","components/DownloadView.tsx","assets/tappedout_banner.png","components/Header.tsx","components/ConvertButton.tsx","components/UrlInput.tsx","components/ConvertView.tsx","components/LoadingView.tsx","components/Converter.tsx","App.tsx","index.tsx"],"names":["SERVER_URL","window","location","hostname","requestDownload","url","a","axios","post","res","data","id","identifier","endpoint","get","DownloadView","onClick","filename","className","style","color","Button","variant","Header","src","tappedoutBanner","alt","ConvertButton","error","disabled","UrlInput","setUrl","onEnter","TextField","onKeyDown","event","key","label","onChange","target","value","helperText","ConverterView","onConvert","React","useState","useMemo","maybeUrl","URL","_","protocol","isValidHttpUrl","LoadingView","LinearProgress","theme","createMuiTheme","palette","primary","main","blue","secondary","Converter","status","setStatus","isLoading","setIsLoading","downloadId","setDownloadId","youtubeDlApi","then","useEffect","intervalId","setInterval","downloadStatus","clearInterval","alert","ThemeProvider","ConvertView","linkLocation","link","document","createElement","href","click","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.06451e83.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst SERVER_URL = window.location.hostname + \":5000\";\n\nexport type DownloadStatus = {\n  status: string;\n  eta?: string;\n  percent_progress?: string;\n};\n\nexport async function requestDownload(url: string): Promise<string> {\n  const endpoint = \"/download/request\";\n  const res = await axios.post(`http://${SERVER_URL}${endpoint}`, { url });\n  return res.data.id;\n}\n\nexport async function getDownloadStatus(\n  identifier: string\n): Promise<DownloadStatus> {\n  const endpoint = `/downloads/${identifier}/status`;\n  const res = await axios.get(`http://${SERVER_URL}${endpoint}`);\n  return res.data;\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\ntype Props = {\n  onClick: () => void;\n  filename: string;\n};\nexport default function DownloadView({ onClick, filename }: Props) {\n  return (\n    <div className=\"InputView\">\n      <p className=\"InsertText\">\n        üëá <span style={{ color: \"red\" }}>{filename}</span> ready for\n        download!üëáüòÅ\n      </p>\n      <Button\n        id=\"download-button\"\n        color=\"secondary\"\n        onClick={onClick}\n        variant=\"contained\"\n      >\n        Download\n      </Button>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/tappedout_banner.0e6793b5.png\";","import React from \"react\";\n\nimport cockatriceBanner from \"../assets/cockatrice_banner_white.png\";\nimport tappedoutBanner from \"../assets/tappedout_banner.png\";\n\nfunction Header() {\n  return (\n    <header className=\"Header\">\n      <img\n        src={tappedoutBanner}\n        className=\"logo tappedoutLogo\"\n        alt=\"tappedout_logo\"\n      />\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\ntype Props = {\n  onClick: () => void;\n  error: boolean;\n};\n\nexport default function ConvertButton({ onClick, error }: Props) {\n  return (\n    <Button\n      disabled={error}\n      id=\"convert-button\"\n      color=\"primary\"\n      onClick={onClick}\n      variant=\"contained\"\n    >\n      Convert\n    </Button>\n  );\n}\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\n\ntype Props = {\n  setUrl: (input: string) => void;\n  onEnter: () => void;\n  error: boolean;\n};\n\nexport default function UrlInput({ setUrl, onEnter, error }: Props) {\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setUrl(event.target.value);\n  };\n\n  const onKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === \"Enter\") {\n      onEnter();\n    }\n  };\n\n  return (\n    <div className=\"UrlInput\">\n      <TextField\n        className=\"UrlTextField\"\n        error={error}\n        onKeyDown={onKeyPress}\n        id=\"url-input\"\n        label=\"Video URL\"\n        onChange={onChange}\n        variant=\"outlined\"\n        helperText={\n          \"Enter some URL (e.g. https://www.youtube.com/watch?v=dQw4w9WgXcQ) \"\n        }\n      />\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport ConvertButton from \"./ConvertButton\";\nimport UrlInput from \"./UrlInput\";\n\ntype Props = {\n  onConvert: (url: string) => void;\n};\n\nfunction isValidHttpUrl(maybeUrl: string): boolean {\n  let url;\n  try {\n    url = new URL(maybeUrl);\n  } catch (_) {\n    return false;\n  }\n  return url.protocol === \"http:\" || url.protocol === \"https:\";\n}\n\nfunction ConverterView({ onConvert }: Props) {\n  const [url, setUrl] = React.useState(\"\");\n\n  const onClick = () => {\n    onConvert(url);\n  };\n\n  const error = React.useMemo(\n    () => !isValidHttpUrl(url) && !(url === \"\"),\n    [url]\n  );\n\n  return (\n    <div className=\"InputView\">\n      <p className=\"InsertText\">Please insert url</p>\n      <UrlInput error={error} setUrl={setUrl} onEnter={onClick} />\n      <ConvertButton error={error} onClick={onClick} />\n    </div>\n  );\n}\n\nexport default ConverterView;\n","import React from \"react\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nfunction LoadingView() {\n  return <LinearProgress />;\n}\n\nexport default LoadingView;\n","import React from \"react\";\nimport { saveAs } from \"file-saver\";\nimport * as youtubeDlApi from \"../api/api\";\n\nimport DownloadView from \"./DownloadView\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { blue } from \"@material-ui/core/colors\";\nimport Header from \"./Header\";\nimport ConvertView from \"./ConvertView\";\nimport LoadingView from \"./LoadingView\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: blue[500],\n    },\n    secondary: {\n      main: blue[800],\n    },\n  },\n});\n\nfunction Converter() {\n  const [status, setStatus] =\n    React.useState<youtubeDlApi.DownloadStatus | null>(null);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [downloadId, setDownloadId] = React.useState<string | null>(null);\n\n  async function onConvert(url: string) {\n    setIsLoading(true);\n    youtubeDlApi\n      .requestDownload(url)\n      .then((identifier) => setDownloadId(identifier));\n  }\n\n  React.useEffect(() => {\n    const pollStatus = () => {\n      if (downloadId && isLoading) {\n        youtubeDlApi\n          .getDownloadStatus(downloadId)\n          .then((downloadStatus) => setStatus(downloadStatus));\n      }\n    };\n\n    const intervalId = setInterval(pollStatus, 1000);\n    return () => clearInterval(intervalId);\n  }, [isLoading, downloadId]);\n\n  React.useEffect(() => {\n    if (status?.status === \"finished\") {\n      setIsLoading(false);\n    }\n    if (status?.status === \"error\") {\n      alert(\"Something went wrong. Maybe try again?\");\n      setIsLoading(false);\n      setStatus(null);\n    }\n  }, [status?.status]);\n\n  const onDownload = () => {\n    const linkLocation = `http://${window.location.hostname}:5000/downloads/${downloadId}/download`;\n    const link = document.createElement(\"a\");\n    link.href = linkLocation;\n    link.click();\n    setStatus(null);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div id=\"content\" className=\"App\">\n        <Header />\n        <div className=\"Converter\">\n          {status === null ? (\n            <ConvertView onConvert={onConvert} />\n          ) : isLoading ? (\n            <LoadingView />\n          ) : (\n            <DownloadView filename={\"test\"} onClick={onDownload} />\n          )}\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default Converter;\n","import React from \"react\";\nimport \"./App.css\";\nimport Converter from \"./components/Converter\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Converter />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}