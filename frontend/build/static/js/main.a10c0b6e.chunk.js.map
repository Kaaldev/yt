{"version":3,"sources":["api/api.ts","components/ConvertButton.tsx","components/UrlInput.tsx","components/ConvertView.tsx","components/Converter.tsx","components/AvailableDownloads.tsx","assets/loadcat.gif","components/LoadingView.tsx","components/Header.tsx","App.tsx","index.tsx"],"names":["SERVER_URL","window","location","hostname","requestDownload","url","a","axios","post","res","data","id","identifier","endpoint","get","listDownloads","deleteDownload","fileName","ConvertButton","onClick","error","Button","disabled","color","variant","UrlInput","setUrl","onEnter","className","TextField","onKeyDown","event","key","label","onChange","target","value","helperText","ConverterView","onConvert","React","useState","useMemo","maybeUrl","URL","_","protocol","isValidHttpUrl","theme","createMuiTheme","palette","primary","main","blue","secondary","Converter","youtubeDlApi","downloadId","href","ThemeProvider","ConvertView","AvailableDownloads","props","availableDownloads","setAvailableDownloads","selected","setSelected","onToggle","includes","newSelected","splice","indexOf","push","onDownload","downloadUrl","getDownloadUrl","link","document","createElement","download","click","onDelete","then","downloads","useEffect","List","sx","width","maxWidth","bgcolor","map","ListItem","secondaryAction","IconButton","edge","aria-label","disablePadding","ListItemButton","role","undefined","dense","ListItemIcon","Checkbox","checked","tabIndex","disableRipple","inputProps","ListItemText","LoadingView","useParams","status","setStatus","intervalId","setInterval","downloadStatus","clearInterval","info","is_playlist","playlist_index","playlist_count","console","log","src","loadCat","alt","LinearProgress","style","margin","Header","to","App","path","element","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a10c0b6e.chunk.js","sourcesContent":["import axios from \"axios\";\n\n// COMMENT THIS before deploy\nconst SERVER_URL = window.location.hostname;\n\nexport type DownloadStatus = {\n  status: string;\n  info: string;\n  is_playlist: boolean;\n  playlist_index: number;\n  playlist_count: number;\n};\n\nexport function getDownloadUrl(fileName: string) {\n  return `https://${SERVER_URL}/downloads/${fileName}`;\n}\n\nexport async function requestDownload(url: string): Promise<string> {\n  const endpoint = \"/download/request\";\n  const res = await axios.post(`https://${SERVER_URL}${endpoint}`, { url });\n  return res.data.id;\n}\n\nexport async function getDownloadStatus(\n  identifier: string\n): Promise<DownloadStatus> {\n  const endpoint = `/downloads/${identifier}/status`;\n  const res = await axios.get(`https://${SERVER_URL}${endpoint}`);\n  return res.data;\n}\n\nexport async function listDownloads(): Promise<string[]> {\n  const endpoint = \"/downloads\";\n  const res = await axios.get(`https://${SERVER_URL}${endpoint}`);\n  return res.data;\n}\n\nexport async function deleteDownload(fileName: string) {\n  const endpoint = `/downloads/${fileName}/delete`;\n  await axios.get(`https://${SERVER_URL}${endpoint}`);\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\ntype Props = {\n  onClick: () => void;\n  error: boolean;\n};\n\nexport default function ConvertButton({ onClick, error }: Props) {\n  return (\n    <Button\n      disabled={error}\n      id=\"convert-button\"\n      color=\"primary\"\n      onClick={onClick}\n      variant=\"contained\"\n    >\n      Convert\n    </Button>\n  );\n}\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\n\ntype Props = {\n  setUrl: (input: string) => void;\n  onEnter: () => void;\n  error: boolean;\n};\n\nexport default function UrlInput({ setUrl, onEnter, error }: Props) {\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setUrl(event.target.value);\n  };\n\n  const onKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === \"Enter\") {\n      onEnter();\n    }\n  };\n\n  return (\n    <div className=\"UrlInput\">\n      <TextField\n        className=\"UrlTextField\"\n        error={error}\n        onKeyDown={onKeyPress}\n        id=\"url-input\"\n        label=\"Video URL\"\n        onChange={onChange}\n        variant=\"outlined\"\n        helperText={\n          \"Enter some URL (e.g. https://www.youtube.com/watch?v=dQw4w9WgXcQ) \"\n        }\n      />\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport ConvertButton from \"./ConvertButton\";\nimport UrlInput from \"./UrlInput\";\n\ntype Props = {\n  onConvert: (url: string) => void;\n};\n\nfunction isValidHttpUrl(maybeUrl: string): boolean {\n  let url;\n  try {\n    url = new URL(maybeUrl);\n  } catch (_) {\n    return false;\n  }\n  return url.protocol === \"http:\" || url.protocol === \"https:\";\n}\n\nfunction ConverterView({ onConvert }: Props) {\n  const [url, setUrl] = React.useState(\"\");\n\n  const onClick = () => {\n    onConvert(url);\n  };\n\n  const error = React.useMemo(\n    () => !isValidHttpUrl(url) && !(url === \"\"),\n    [url]\n  );\n\n  return (\n    <div className=\"InputView\">\n      <p className=\"InsertText\">Please insert url</p>\n      <UrlInput error={error} setUrl={setUrl} onEnter={onClick} />\n      <ConvertButton error={error} onClick={onClick} />\n    </div>\n  );\n}\n\nexport default ConverterView;\n","import React from \"react\";\nimport * as youtubeDlApi from \"../api/api\";\n\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { blue } from \"@material-ui/core/colors\";\nimport ConvertView from \"./ConvertView\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: blue[500],\n    },\n    secondary: {\n      main: blue[800],\n    },\n  },\n});\n\nfunction Converter() {\n  async function onConvert(url: string) {\n    const downloadId = await youtubeDlApi.requestDownload(url);\n    window.location.href = `/view/downloads/${downloadId}`;\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"Converter\">\n        <ConvertView onConvert={onConvert} />\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default Converter;\n","import React from \"react\";\nimport { listDownloads, deleteDownload, getDownloadUrl } from \"../api/api\";\n\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport IconButton from \"@mui/material/IconButton\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\n\ntype Props = {};\nexport default function AvailableDownloads(props: Props) {\n  const [availableDownloads, setAvailableDownloads] = React.useState<string[]>(\n    []\n  );\n  const [selected, setSelected] = React.useState<string[]>([]);\n\n  const onToggle = (fileName: string) => () => {\n    if (selected.includes(fileName)) {\n      const newSelected = [...selected];\n      newSelected.splice(selected.indexOf(fileName), 1);\n      setSelected(newSelected);\n    } else {\n      const newSelected = [...selected];\n      newSelected.push(fileName);\n      setSelected(newSelected);\n    }\n  };\n\n  const onDownload = (fileName: string) => () => {\n    const downloadUrl = getDownloadUrl(fileName);\n    // window.open(downloadUrl);\n    const link = document.createElement(\"a\");\n    link.href = downloadUrl;\n    link.download = fileName;\n    link.click();\n  };\n\n  const onDelete = (fileName: string) => async () => {\n    await deleteDownload(fileName);\n    listDownloads().then((downloads) => setAvailableDownloads(downloads));\n  };\n\n  const deleteAll = () => {\n    selected.map((fileName) => deleteDownload(fileName));\n  };\n\n  React.useEffect(() => {\n    listDownloads().then((downloads) => setAvailableDownloads(downloads));\n  }, []);\n\n  return (\n    <div className=\"DownloadsWrapper\">\n      <List sx={{ width: \"100%\", maxWidth: 360, bgcolor: \"#c1ffebbf\" }}>\n        {availableDownloads.map((fileName) => (\n          <ListItem\n            key={fileName}\n            secondaryAction={\n              <>\n                <IconButton\n                  edge=\"end\"\n                  aria-label=\"download\"\n                  onClick={onDownload(fileName)}\n                >\n                  <DownloadIcon />\n                </IconButton>\n                <IconButton\n                  edge=\"end\"\n                  aria-label=\"delete\"\n                  onClick={onDelete(fileName)}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </>\n            }\n            disablePadding\n          >\n            <ListItemButton role={undefined} onClick={onToggle(fileName)} dense>\n              <ListItemIcon>\n                <Checkbox\n                  edge=\"start\"\n                  checked={selected.includes(fileName)}\n                  tabIndex={-1}\n                  disableRipple\n                  inputProps={{ \"aria-labelledby\": fileName }}\n                />\n              </ListItemIcon>\n              <ListItemText id={fileName} primary={fileName} />\n            </ListItemButton>\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/loadcat.1a586006.gif\";","import React from \"react\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport * as youtubeDlApi from \"../api/api\";\nimport loadCat from \"../assets/loadcat.gif\";\nimport { useParams } from \"react-router-dom\";\n\nfunction LoadingView() {\n  const params = useParams();\n  const downloadId = params.downloadId;\n  const [status, setStatus] =\n    React.useState<youtubeDlApi.DownloadStatus | null>(null);\n\n  React.useEffect(() => {\n    const pollStatus = () => {\n      if (downloadId) {\n        youtubeDlApi\n          .getDownloadStatus(downloadId)\n          .then((downloadStatus) => setStatus(downloadStatus));\n      }\n    };\n\n    const intervalId = setInterval(pollStatus, 1000);\n    return () => clearInterval(intervalId);\n  }, [downloadId]);\n\n  const info = status?.is_playlist\n    ? `${status.info}  ${status.playlist_index}/${status.playlist_count}`\n    : `${status?.info} `;\n\n  React.useEffect(() => {\n    if (status?.status === \"finished\") {\n      window.location.href = \"/view/downloads\";\n    }\n  }, [status]);\n\n  console.log(status);\n\n  return (\n    <>\n      <div className=\"LoadingWrapper\">\n        <img src={loadCat} alt=\"loading_cat\" className=\"LoadingCat\" />\n        <div className=\"LoadingText\">{info || \"Loading\"}</div>\n      </div>\n      <LinearProgress style={{ margin: \"10%\", width: \"80%\" }} />\n    </>\n  );\n}\n\nexport default LoadingView;\n","import React from \"react\";\n\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\n\nfunction Header() {\n  return (\n    <header className=\"Header\">\n      <Link to=\"/\">Home</Link>\n      <Link to=\"/view/in_progress\">In progress</Link>\n      <Link to=\"/view/downloads\">Downloads</Link>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport Converter from \"./components/Converter\";\nimport AvailableDownloads from \"./components/AvailableDownloads\";\nimport LoadingView from \"./components/LoadingView\";\nimport Header from \"./components/Header\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <Routes>\n          <Route path=\"\" element={<Converter />} />\n          <Route path=\"/view/downloads\" element={<AvailableDownloads />} />\n          <Route path=\"/view/downloads/:downloadId\" element={<LoadingView />} />\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}